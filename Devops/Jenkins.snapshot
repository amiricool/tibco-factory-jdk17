pipeline {
    agent any

    options {
        timeout(time: 30, unit: 'MINUTES')
        buildDiscarder(logRotator(numToKeepStr: '10'))
    }

       stages {
            stage('Set Build Description') {
                steps {
                    script {
                        def userCause = currentBuild.rawBuild?.getCause(hudson.model.Cause$UserIdCause)
                        def triggeredBy = userCause?.userName ?: userCause?.userId
                        if (!triggeredBy) {
                            def causes = currentBuild.rawBuild?.getCauses()
                            triggeredBy = causes ? causes[0]?.shortDescription : 'Unknown'
                        }
                        currentBuild.description = "Triggered by ${triggeredBy}"
                    }
                }
            }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build & Test') {
            steps {
                sh 'mvn -B -U clean verify'
            }
        }

        stage('Deploy') {
            when {
                anyOf {
                    branch 'main'
                    branch 'master'
                }
            }
            steps {
                sh 'mvn -B -DskipTests deploy'
            }
        }
    }

    post {
        always {
            junit allowEmptyResults: true, testResults: '**/target/surefire-reports/*.xml'
            archiveArtifacts artifacts: '**/target/*.jar', fingerprint: true, allowEmptyArchive: true
        }
        success {
            echo 'Build completed successfully.'
        }
        failure {
            echo 'Build failed. Please review the logs.'
        }
    }
}